name: Java R5RCore build + R coverage + R CMD check

on:
  push:
    paths:
      - java-r5rcore/**
      - r-package/**
      - .github/workflows/build-and-coverage.yaml
  pull_request:
    paths:
      - java-r5rcore/**
      - r-package/**
      - .github/workflows/build-and-coverage.yaml
    branches:
      - dev
      - master

jobs:
  build:
    name: Build Java JAR
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    if: ${{ !github.ref_protected }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install R packages
        run: |
          install.packages(c('devtools', 'remotes'))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
        working-directory: r-package

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
        working-directory: r-package

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

      - name: Build with Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
          arguments: build
          build-root-directory: java-r5rcore

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: r5r-jar
          path: java-r5rcore/build/libs/java-r5rcore-*.jar
          if-no-files-found: error

  coverage:
    name: Test coverage (R)
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Download built JAR into r-package/inst/jar/r5r.jar
        uses: actions/download-artifact@v4
        with:
          name: r5r-jar
          path: r-package/inst/jar
      - name: Rename JAR to r5r.jar
        shell: bash
        run: |
          mkdir -p r-package/inst/jar
          shopt -s nullglob
          files=(r-package/inst/jar/*.jar)
          if [ ${#files[@]} -eq 0 ]; then echo "No JAR downloaded"; exit 1; fi
          mv "${files[0]}" r-package/inst/jar/r5r.jar
          ls -l r-package/inst/jar

      - name: Install R deps for coverage
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr, any::xml2
          needs: coverage
          working-directory: r-package

      - name: Run coverage and produce Cobertura XML
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          covr::to_cobertura(cov, file = "cobertura.xml")
        shell: Rscript {0}
        working-directory: r-package

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: ${{ github.event_name != 'pull_request' || secrets.CODECOV_TOKEN }}
          file: ./cobertura.xml
          plugin: noop
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}
          working-directory: r-package

  r-cmd-check:
    name: R CMD check
    needs: build
    runs-on: ${{ matrix.config.os }}
    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-22.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest"}
          - {os: ubuntu-22.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest"}
          - {os: ubuntu-22.04, r: 'oldrel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest"}
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      # Java setup for macOS (arm64)
      - name: Java setup (macOS)
        if: runner.os == 'macOS'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          architecture: arm64

      # Java setup for non-macOS
      - name: Java setup (non-macOS)
        if: runner.os != 'macOS'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Download built JAR
        uses: actions/download-artifact@v4
        with:
          name: r5r-jar
          path: r-package/inst/jar

      # Rename on Windows
      - name: Place JAR at r-package/inst/jar/r5r.jar (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path r-package/inst/jar | Out-Null
          $files = Get-ChildItem -Path r-package/inst/jar -Filter *.jar
          if ($files.Count -eq 0) { Write-Error "No JAR downloaded"; exit 1 }
          Move-Item $files[0].FullName r-package/inst/jar/r5r.jar -Force
          Get-ChildItem r-package/inst/jar

      # Rename on macOS/Linux
      - name: Place JAR at r-package/inst/jar/r5r.jar (macOS/Linux)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p r-package/inst/jar
          shopt -s nullglob
          files=(r-package/inst/jar/*.jar)
          if [ ${#files[@]} -eq 0 ]; then echo "No JAR downloaded"; exit 1; fi
          mv "${files[0]}" r-package/inst/jar/r5r.jar
          ls -l r-package/inst/jar

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          working-directory: r-package

      - uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: r-package
